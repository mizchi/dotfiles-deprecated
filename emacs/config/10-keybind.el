(setq viper-mode t)
(setq backup-inhibited t)
(require 'vimpulse)
(setq vimpulse-cjk-want-japanese-phrase-as-word t)
(require 'vimpulse-cjk)
(defun vimpulse-set-mode-line-face ()
  (unless (minibufferp (current-buffer))
    (set-face-background 'mode-line
                         (cdr (assq viper-current-state
                                    '((vi-state       . "dark slate gray")
                                      (insert-state   . "Black")
                                      (emacs-state    . "slate blue")
                                      (operator-state . "slate blue")
                                      (visual-state   . "Blue")))))))

(add-hook 'viper-vi-state-hook    'vimpulse-set-mode-line-face)
(setq visible-bell nil)
(add-hook 'viper-insert-state-hook      'vimpulse-set-mode-line-face)
(add-hook 'viper-emacs-state-hook       'vimpulse-set-mode-line-face)
(add-hook 'vimpulse-operator-state-hook 'vimpulse-set-mode-line-face)
(add-hook 'vimpulse-visual-state-hook   'vimpulse-set-mode-line-face)
(defadvice set-buffer (after vimpulse-mode-line-face activate)
  (vimpulse-set-mode-line-face))
(defadvice find-file (after vimpulse-mode-line-face activate)
  (vimpulse-set-mode-line-face))
(defadvice kill-buffer (after vimpulse-mode-line-face activate)
  (vimpulse-set-mode-line-face))
(defadvice switch-to-buffer (after vimpulse-mode-line-face activate)
  (vimpulse-set-mode-line-face))
(defadvice select-window (after vimpulse-mode-line-face activate)
  (vimpulse-set-mode-line-face))
(defadvice delete-window (after vimpulse-mode-line-face activate)
  (vimpulse-set-mode-line-face))
(defun my-minibuffer-minor-mode ()
  (when (fboundp my-minibuffer-minor-mode)
    (funcall (symbol-function my-minibuffer-minor-mode))))
(add-hook 'minibuffer-setup-hook 'my-minibuffer-minor-mode)
;;(add-hook 'minibuffer-exit-hook 'my-minibuffer-minor-mode)
(defadvice anything (around set-major-mode activate)
  (let ((my-minibuffer-minor-mode 'my-anything-minibuffer-mode))
    ad-do-it))
(easy-mmode-define-minor-mode
 my-anything-minibuffer-mode
 "Anything MiniBuffer Mode"
 nil
 " Anything MiniBuffer"
 '())
(vimpulse-map "m" 'imenu)
(vimpulse-map ";" 'viper-ex)
(vimpulse-map "0" 'move-beginning-of-line)
(vimpulse-map "9" 'move-end-of-line)
(vimpulse-map "o" 'viper-open-line)
(vimpulse-map "?" 'describe-bindings)
(vimpulse-map "l" 'forward-char)
(vimpulse-map "h" 'backward-char)
(vimpulse-map "F" 'find-file-at-point)
(vimpulse-map "f" 'jaunte)
(vimpulse-map "?" 'describe-bindings)
(vimpulse-map "M" 'my-toggle-hideshow-all)
(vimpulse-map " " 'anything)
(vimpulse-map "c" 'comment-dwim)
(vimpulse-map "C" "0v9hlc0")
(vimpulse-map "b" 'anything-buffers+ )
(vimpulse-map "H" 'elscreen-previous)
(vimpulse-map "L" 'elscreen-next)
(vimpulse-map "tt" 'elscreen-create)
(vimpulse-map "td" 'elscreen-kill )
(vimpulse-map "T" (lambda ()
                    (interactive)
                    (elscreen-create)
                    (anything)
                    ))
(setq ac-use-quick-help nil)
(setq ac-use-menu-map t)
(define-key ac-completing-map "\C-g" 'viper-exit-insert-state)

(vimpulse-map "\C-k" 'anything-show-kill-ring )
(vimpulse-map "\C-s" 'anything-c-moccur-occur-by-moccur )
(vimpulse-map "\C-r" 'smart-compile)


(define-key viper-minibuffer-map "\C-g" 'keyboard-escape-quit)

(define-key ac-completing-map "\C-g" 'viper-exit-insert-state)
(define-key viper-insert-global-user-map "\C-g" 'viper-exit-insert-state)
(define-key viper-insert-global-user-map "\C-h" 'delete-backward-char)
(define-key viper-insert-global-user-map "\C-b" 'backward-char)
(define-key viper-insert-global-user-map "\C-f" 'forward-char)
(define-key viper-insert-global-user-map "\C-n" 'next-line)
(define-key viper-insert-global-user-map "\C-p" 'previous-line)
(define-key viper-insert-global-user-map "\C-a" 'move-beginning-of-line)
(define-key viper-insert-global-user-map "\C-e" 'end-of-line)
(define-key viper-insert-global-user-map "\C-h" 'delete-backward-char)
(define-key viper-insert-global-user-map "\C-o" 'yas/expand)
(define-key viper-insert-global-user-map "\C-y" 'yas/insert-snippet)
(define-key viper-insert-global-user-map "\C-m" 'newline-and-indent)

(define-key viper-vi-kbd-map (kbd "<f12>") t)

(define-key vimpulse-visual-basic-map "v" (lambda ()
                                            (interactive)
                                            (end-of-line)
                                            (backward-char)
                                            (forward-char)
                                            )
  )




(vimpulse-define-key 'my-anything-minibuffer-mode 'insert-state "\C-n" 'anything-next-line)
(vimpulse-define-key 'my-anything-minibuffer-mode 'insert-state "\C-p" 'anything-previous-line)
(vimpulse-define-key 'my-anything-minibuffer-mode 'insert-state "\C-f" 'anything-next-page)
(vimpulse-define-key 'my-anything-minibuffer-mode 'insert-state "\C-b" 'anything-previous-page)
(vimpulse-define-key 'my-anything-minibuffer-mode 'insert-state "\C-l" 'anything-force-update)
(vimpulse-define-key 'my-anything-minibuffer-mode 'vi-state "\C-f" 'anything-next-page)
(vimpulse-define-key 'my-anything-minibuffer-mode 'vi-state "\C-b" 'anything-previous-page)
(vimpulse-define-key 'my-anything-minibuffer-mode 'vi-state "\C-l" 'anything-force-update)
(vimpulse-define-key 'my-anything-minibuffer-mode 'vi-state "}" 'anything-next-source)
(vimpulse-define-key 'my-anything-minibuffer-mode 'vi-state "{" 'anything-previous-source)
(vimpulse-define-key 'my-anything-minibuffer-mode 'vi-state "gg" 'anything-beginning-of-buffer)
(vimpulse-define-key 'my-anything-minibuffer-mode 'vi-state "G" 'anything-end-of-buffer)
(vimpulse-define-key 'my-anything-minibuffer-mode 'vi-state "/" 'anything-isearch)

