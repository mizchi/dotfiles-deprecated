; vimpulse
(setq viper-mode t)
(setq backup-inhibited t)
(require 'vimpulse)
(defun vimpulse-set-mode-line-face ()
  (unless (minibufferp (current-buffer))
    (set-face-background 'mode-line
                         (cdr (assq viper-current-state
                                    '((vi-state       . "Black")
                                      (insert-state   . "Red")
                                      (emacs-state    . "Gray")
                                      (operator-state . "Green")
                                      (visual-state   . "Blue")))))))
(add-hook 'viper-vi-state-hook    'vimpulse-set-mode-line-face)
(setq visible-bell nil)
(add-hook 'viper-insert-state-hook      'vimpulse-set-mode-line-face)
(add-hook 'viper-emacs-state-hook       'vimpulse-set-mode-line-face)
(add-hook 'vimpulse-operator-state-hook 'vimpulse-set-mode-line-face)
(add-hook 'vimpulse-visual-state-hook   'vimpulse-set-mode-line-face)
(defadvice set-buffer (after vimpulse-mode-line-face activate)
  (vimpulse-set-mode-line-face))
(defadvice find-file (after vimpulse-mode-line-face activate)
  (vimpulse-set-mode-line-face))
(defadvice kill-buffer (after vimpulse-mode-line-face activate)
  (vimpulse-set-mode-line-face))
(defadvice switch-to-buffer (after vimpulse-mode-line-face activate)
  (vimpulse-set-mode-line-face))
(defadvice select-window (after vimpulse-mode-line-face activate)
  (vimpulse-set-mode-line-face))
(defadvice delete-window (after vimpulse-mode-line-face activate)
  (vimpulse-set-mode-line-face))	;

; comibinate with anything
(defun my-minibuffer-minor-mode ()
  (when (fboundp my-minibuffer-minor-mode)
    (funcall (symbol-function my-minibuffer-minor-mode))))
(add-hook 'minibuffer-setup-hook 'my-minibuffer-minor-mode)
;;(add-hook 'minibuffer-exit-hook 'my-minibuffer-minor-mode)
(defadvice anything (around set-major-mode activate)
  (let ((my-minibuffer-minor-mode 'my-anything-minibuffer-mode))
    ad-do-it))
(easy-mmode-define-minor-mode
 my-anything-minibuffer-mode
 "Anything MiniBuffer Mode"
 nil
 " Anything MiniBuffer"
 '())
(defvar anything-follow-mode-flag nil)
(defvar anything-with-vi-state nil)
(add-hook 'minibuffer-setup-hook
          (lambda ()
            (when anything-follow-mode-flag (anything-follow-mode))
            (when anything-with-vi-state (viper-change-state-to-vi))) t)
(defadvice anything-for-lines-from-here (around anything-auto-follow-mode activate)
  (let ((anything-follow-mode-flag t)
        (anything-with-vi-state t))
    ad-do-it))

(vimpulse-map "l" 'forward-char)
(vimpulse-map "h" 'backward-char)
(vimpulse-map "C" 'comment-dwim)
(vimpulse-map "?" 'describe-bindings)
(vimpulse-map "B" 'anything-buffers+)
(vimpulse-map "ff" 'find-file)
(vimpulse-map "fr" 'anything-recentf)
(vimpulse-map "b" '(lambda ()
                     (interactive)
		     (anything 'anything-c-source-elscreen)
	))
(vimpulse-map "td" 'elscreen-kill)
(vimpulse-map "tt" '(lambda ()
                     (interactive)
		     (elscreen-create)
		     (anything-recentf)
	))
(vimpulse-map ">" 'elscreen-next)
(vimpulse-map "<" 'elscreen-previous)
(define-key viper-minibuffer-map "\C-g" 'keyboard-escape-quit)
(define-key viper-insert-global-user-map "\C-g" 'viper-exit-insert-state)
(define-key viper-insert-global-user-map "\C-h" 'delete-backward-char)
(define-key vimpulse-visual-basic-map "v" 'end-of-line)
(define-key vimpulse-visual-basic-map ";" 'comment-dwim)

(vimpulse-define-key 'my-anything-minibuffer-mode 'insert-state "\C-n" 'anything-next-line)
(vimpulse-define-key 'my-anything-minibuffer-mode 'insert-state "\C-p" 'anything-previous-line)
(vimpulse-define-key 'my-anything-minibuffer-mode 'insert-state "\C-f" 'anything-next-page)
(vimpulse-define-key 'my-anything-minibuffer-mode 'insert-state "\C-b" 'anything-previous-page)
(vimpulse-define-key 'my-anything-minibuffer-mode 'insert-state "\C-l" 'anything-force-update)
(vimpulse-define-key 'my-anything-minibuffer-mode 'vi-state "o" 'anything-follow-mode)
(vimpulse-define-key 'my-anything-minibuffer-mode 'vi-state "j" 'anything-next-line)
(vimpulse-define-key 'my-anything-minibuffer-mode 'vi-state "k" 'anything-previous-line)
(vimpulse-define-key 'my-anything-minibuffer-mode 'vi-state "\C-f" 'anything-next-page)
(vimpulse-define-key 'my-anything-minibuffer-mode 'vi-state "\C-b" 'anything-previous-page)
(vimpulse-define-key 'my-anything-minibuffer-mode 'vi-state "\C-l" 'anything-force-update)
(vimpulse-define-key 'my-anything-minibuffer-mode 'vi-state "}" 'anything-next-source)
(vimpulse-define-key 'my-anything-minibuffer-mode 'vi-state "{" 'anything-previous-source)
(vimpulse-define-key 'my-anything-minibuffer-mode 'vi-state "gg" 'anything-beginning-of-buffer)
(vimpulse-define-key 'my-anything-minibuffer-mode 'vi-state "G" 'anything-end-of-buffer)
(vimpulse-define-key 'my-anything-minibuffer-mode 'vi-state "/" 'anything-isearch)
